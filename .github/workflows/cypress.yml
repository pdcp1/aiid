name: Cypress e2e tests

on:
  pull_request:
    types: ['opened', 'edited', 'synchronize']

jobs:
  install:
    name: NPM install and cache node_modules
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: site/gatsby-site
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Cache 'node_modules' and '~/.cache/Cypress' folder
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3.0.5
        env:
          cache-name: cache-install-folder
        with:
          # caching node_modules
          path: |
            site/gatsby-site/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install NPM dependencies
      - name: Install NPM dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        uses: cypress-io/github-action@v4
        with:
          working-directory: site/gatsby-site
          # just perform install
          runTests: false
          install-command: npm ci --legacy-peer-deps

  cypress-run:
    name: Run Cypress tests
    runs-on: ubuntu-latest
    needs: install
    defaults:
      run:
        shell: bash
        working-directory: site/gatsby-site
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 5 copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Cache node_modules folder
      - name: Cache node modules
        id: cache-nodemodules-2
        uses: actions/cache@v3.0.5
        env:
          cache-name: cache-install-folder
        with:
          # caching node_modules
          path: |
            site/gatsby-site/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Install NPM dependencies
      - name: Install NPM dependencies
        if: steps.cache-nodemodules-2.outputs.cache-hit != 'true'
        uses: cypress-io/github-action@v4
        with:
          working-directory: site/gatsby-site
          # just perform install
          runTests: false
          install-command: npm ci --legacy-peer-deps

      # Run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          working-directory: site/gatsby-site
          # we have already installed all dependencies above
          install: false
          config-file: cypress.config.js
          record: true
          parallel: true
          group: "Cypress e2e tests"
          start: npm start
          wait-on: http://localhost:8000/
          # wait for 10 minutes for the server to respond
          wait-on-timeout: 600
        env:
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          E2E_ADMIN_USERNAME: ${{ secrets.E2E_ADMIN_USERNAME }}
          E2E_ADMIN_PASSWORD: ${{ secrets.E2E_ADMIN_PASSWORD }}
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          GATSBY_ALGOLIA_APP_ID: ${{ secrets.GATSBY_ALGOLIA_APP_ID }}
          GATSBY_ALGOLIA_SEARCH_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_KEY }}
          GATSBY_AVAILABLE_LANGUAGES: ${{ secrets.GATSBY_AVAILABLE_LANGUAGES }}
          GATSBY_REALM_APP_ID: ${{ secrets.GATSBY_REALM_APP_ID }}
          GOOGLE_TRANSLATE_API_KEY: ${{ secrets.GOOGLE_TRANSLATE_API_KEY }}
          MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING }}
          MONGODB_REPLICA_SET: ${{ secrets.MONGODB_REPLICA_SET }}
          MONGODB_TRANSLATIONS_CONNECTION_STRING: ${{ secrets.MONGODB_TRANSLATIONS_CONNECTION_STRING }}
          GATSBY_REALM_APP_GRAPHQL_URL: ${{ secrets.GATSBY_REALM_APP_GRAPHQL_URL }}

  deploy:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    # needs: cypress-run
    defaults:
      run:
        shell: bash
        working-directory: site/gatsby-site
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Deploy to Netlify
      # - uses: jsmrcaga/action-netlify-deploy@master
      #   with:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      #     deploy_alias: ${{ env.BRANCH_NAME }}
      #     build_directory: "/site/gatsby-site/public"

      - name: npm install and build
        run: |
          npm ci --legacy-peer-deps
          npm run build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "/site/gatsby-site/public"
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          netlify-config-path: "/site/gatsby-site/netlify.toml"
          alias: deploy-preview-${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
